{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","components/GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","prev","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFecthGifs","gif","key","GifExpertApp","categories","i","ReactDOM","render","document","getElementById"],"mappings":"8LAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAgB5C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,8BCNlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC4EC,UAAUH,GADtF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QATvB,kBAaZM,GAbY,4CAAH,sDCAPO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,sBAAKc,UAAU,2CAAf,UACI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECAX,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAC/BqB,KAAM,GACNa,SAAS,IAJyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KAoBtC,OAbAC,qBAAW,WAEPxB,EAAQC,GACHwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAItB,CAACpB,IAGGqB,EDlByBK,CAAa1B,GAAhCa,EAFsB,EAE5BN,KAAca,EAFc,EAEdA,QAErB,OACI,qCACI,oBAAIJ,UAAU,2CAAd,SAA0DhB,IAEzDoB,GAAa,wCAEd,qBAAKJ,UAAU,YAAf,SAEYH,EAAOJ,KAAK,SAAAkB,GAAG,OACX,wBAAC,EAAD,2BACQA,GADR,IAEIC,IAAKD,EAAIhB,eEa1BkB,EA5BM,WAAO,IAAD,EAGa3C,mBAAS,CAAC,gBAHvB,mBAGhB4C,EAHgB,KAGJ7C,EAHI,KAMvB,OACI,qCACI,+CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAIA,6BAEQ6C,EAAWrB,KAAI,SAACT,EAAS+B,GAAV,OACV,cAAC,EAAD,CACG/B,SAAUA,GACLA,YClBjCgC,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.00f163d3.chunk.js","sourcesContent":["import React, {useState} from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({setCategories}) => {\n\n    const [inputValue, setInputValue] = useState('');\n\n    const handleInputChange = (e) => {\n        setInputValue(e.target.value)\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        if(inputValue.trim().length > 2){\n            setCategories( prev => [inputValue, ...prev ]);\n            setInputValue('');\n        }\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input\n                type='text'\n                value={inputValue}\n                onChange={handleInputChange}\n            ></input>\n        </form>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\nexport const getGifs = async(category) => {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=hkWf6PZGP74bbSUFnH8V0hzn0TNxW9Ww&q=${encodeURI(category)}&limit=15`;\n    const resp = await fetch(url);\n    const {data} = await resp.json();\n\n    const gifs = data.map(img => {\n        return{\n            id: img.id,\n            title: img.title,\n            url: img.images?.downsized_medium.url\n        }\n    })\n\n    return gifs;\n}","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeInUp\">\n            <img src={url} alt={title} />\n            <p>{title}</p>\n        </div>\n    )\n}\n","import React from 'react'\nimport { useFecthGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n\nexport const GifGrid = ({category}) => {\n\n    const {data: images, loading} = useFecthGifs(category);\n\n    return (\n        <>\n            <h3 className='card animate__animated animate__fadeInUp'>{category}</h3>\n\n            {loading &&   <p>Loading</p>}\n\n            <div className='card-grid'>\n                    {\n                        images.map( gif => (\n                            <GifGridItem \n                                {...gif}\n                                key={gif.id}\n                            />\n                        ))\n                    }\n            </div>\n        </>\n    )\n}\n","import {useState, useEffect} from 'react';\nimport {getGifs} from '../helpers/getGifs';\n\n\nexport const useFecthGifs = (category) => {\n\n    const [state, setState] = useState({\n        data: [],\n        loading: true\n    });\n\n    useEffect( () =>{ \n\n        getGifs(category)\n            .then(imgs => {\n                setState({\n                    data: imgs,\n                    loading: false\n                })\n            })\n\n    }, [category]);\n\n\n    return state;\n}","import React, {useState} from 'react';\nimport {AddCategory} from './AddCategory';\nimport { GifGrid } from './GifGrid';\n\nconst GifExpertApp = () => {\n\n\n    const [categories, setCategories] = useState(['Dragon Ball']);\n    \n\n    return ( \n        <>\n            <h2>GifExpertApp </h2>\n            <AddCategory setCategories={setCategories}/>\n            <hr/>\n\n\n            \n            <ol>\n                {\n                    categories.map((category,i) => \n                         <GifGrid \n                            category={category} \n                            key={category} \n                        /> \n                    )\n                }    \n            </ol> \n        </>\n    );\n}\n \nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './components/GifExpertApp';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}